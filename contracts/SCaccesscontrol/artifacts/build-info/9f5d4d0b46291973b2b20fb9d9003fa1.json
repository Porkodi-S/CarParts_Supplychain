{
	"id": "9f5d4d0b46291973b2b20fb9d9003fa1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.0",
	"solcLongVersion": "0.5.0+commit.1d4f565a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SCaccesscontrol/CarParts_DistributorRole.sol": {
				"content": "pragma solidity >=0.4.24;\r\n\r\n// Import the library 'Roles'\r\nimport \"./Roles.sol\";\r\n\r\n// Define a contract 'CarParts_DistributorRole' to manage this role - add, remove, check\r\ncontract CarParts_DistributorRole {\r\n  using Roles for Roles.Role;\r\n  // Define 2 events, one for Adding, and other for Removing\r\n  event CarParts_DistributorAdded(address indexed account);\r\n  event CarParts_DistributorRemoved(address indexed account);\r\n  // Define a struct 'CarParts_distributors' by inheriting from 'Roles' library, struct Role\r\n  Roles.Role private CarParts_distributors;\r\n  // In the constructor make the address that deploys this contract the 1st CarParts_distributor\r\n  constructor() public {\r\n    _addCarParts_Distributor(msg.sender);\r\n  }\r\n\r\n  // Define a modifier that checks to see if msg.sender has the appropriate role\r\n  modifier onlyCarParts_Distributor() {\r\n    require(isCarParts_Distributor(msg.sender));\r\n    _;\r\n  }\r\n\r\n  // Define a function 'isCarParts_Distributor' to check this role\r\n  function isCarParts_Distributor(address account) public view returns (bool) {\r\n    return CarParts_distributors.has(account);\r\n  }\r\n\r\n  // Define a function 'addCarParts_Distributor' that adds this role\r\n  function addCarParts_Distributor(address account) public onlyCarParts_Distributor {\r\n    _addCarParts_Distributor(account);\r\n  }\r\n\r\n  // Define a function 'renounceCarParts_Distributor' to renounce this role\r\n  function renounceCarParts_Distributor() public {\r\n    _removeCarParts_Distributor(msg.sender);\r\n  }\r\n\r\n  // Define an internal function '_addCarParts_Distributor' to add this role, called by 'addCarParts_Distributor'\r\n  function _addCarParts_Distributor(address account) internal {\r\n    CarParts_distributors.add(account);\r\n    emit CarParts_DistributorAdded(account);\r\n  }\r\n\r\n  // Define an internal function '_removeCarParts_Distributor' to remove this role, called by 'removeCarParts_Distributor'\r\n  function _removeCarParts_Distributor(address account) internal {\r\n    CarParts_distributors.remove(account);\r\n    emit CarParts_DistributorRemoved(account);\r\n  }\r\n}"
			},
			"contracts/SCaccesscontrol/Roles.sol": {
				"content": "pragma solidity >=0.4.24;\r\n\r\n/**\r\n * @title Roles\r\n * @dev Library for managing addresses assigned to a Role.\r\n */\r\nlibrary Roles {\r\n  struct Role {\r\n    mapping (address => bool) bearer;\r\n  }\r\n\r\n  /**\r\n   * @dev give an account access to this role\r\n   */\r\n  function add(Role storage role, address account) internal {\r\n    require(account != address(0));\r\n    require(!has(role, account));\r\n\r\n    role.bearer[account] = true;\r\n  }\r\n\r\n  /**\r\n   * @dev remove an account's access to this role\r\n   */\r\n  function remove(Role storage role, address account) internal {\r\n    require(account != address(0));\r\n    require(has(role, account));\r\n\r\n    role.bearer[account] = false;\r\n  }\r\n\r\n  /**\r\n   * @dev check if an account has this role\r\n   * @return bool\r\n   */\r\n  function has(Role storage role, address account)\r\n    internal\r\n    view\r\n    returns (bool)\r\n  {\r\n    require(account != address(0));\r\n    return role.bearer[account];\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SCaccesscontrol/CarParts_DistributorRole.sol": {
				"CarParts_DistributorRole": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "addCarParts_Distributor",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceCarParts_Distributor",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "isCarParts_Distributor",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "account",
									"type": "address"
								}
							],
							"name": "CarParts_DistributorAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "account",
									"type": "address"
								}
							],
							"name": "CarParts_DistributorRemoved",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":175:2084  contract CarParts_DistributorRole {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":668:738  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":668:738  constructor() public {\r... */\n  pop\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":696:732  _addCarParts_Distributor(msg.sender) */\n  tag_4\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":721:731  msg.sender */\n  caller\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":696:720  _addCarParts_Distributor */\n  mul(0x100000000, tag_5)\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":696:732  _addCarParts_Distributor(msg.sender) */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_4:\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":175:2084  contract CarParts_DistributorRole {\r... */\n  jump(tag_6)\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1637:1790  function _addCarParts_Distributor(address account) internal {\r... */\ntag_5:\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1704:1738  CarParts_distributors.add(account) */\n  tag_8\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1730:1737  account */\n  dup2\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1704:1725  CarParts_distributors */\n  0x0\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1704:1729  CarParts_distributors.add */\n  or(tag_0_30, mul(0x100000000, tag_9))\n  swap1\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1704:1738  CarParts_distributors.add(account) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_8:\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1776:1783  account */\n  dup1\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1750:1784  CarParts_DistributorAdded(account) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xf7da286df490d50d713a7db337e873dba3f443fb4d6fd500f71dd90c155eb5c3\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1637:1790  function _addCarParts_Distributor(address account) internal {\r... */\n  pop\n  jump\t// out\n    /* \"contracts/SCaccesscontrol/Roles.sol\":259:431  function add(Role storage role, address account) internal {\r... */\ntag_9:\n    /* \"contracts/SCaccesscontrol/Roles.sol\":351:352  0 */\n  0x0\n    /* \"contracts/SCaccesscontrol/Roles.sol\":332:353  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/SCaccesscontrol/Roles.sol\":332:339  account */\n  dup2\n    /* \"contracts/SCaccesscontrol/Roles.sol\":332:353  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/SCaccesscontrol/Roles.sol\":324:354  require(account != address(0)) */\n  iszero\n  iszero\n  tag_11\n  jumpi\n  0x0\n  dup1\n  revert\ntag_11:\n    /* \"contracts/SCaccesscontrol/Roles.sol\":370:388  has(role, account) */\n  tag_12\n    /* \"contracts/SCaccesscontrol/Roles.sol\":374:378  role */\n  dup3\n    /* \"contracts/SCaccesscontrol/Roles.sol\":380:387  account */\n  dup3\n    /* \"contracts/SCaccesscontrol/Roles.sol\":370:373  has */\n  mul(0x100000000, tag_13)\n    /* \"contracts/SCaccesscontrol/Roles.sol\":370:388  has(role, account) */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_12:\n    /* \"contracts/SCaccesscontrol/Roles.sol\":369:388  !has(role, account) */\n  iszero\n    /* \"contracts/SCaccesscontrol/Roles.sol\":361:389  require(!has(role, account)) */\n  iszero\n  iszero\n  tag_14\n  jumpi\n  0x0\n  dup1\n  revert\ntag_14:\n    /* \"contracts/SCaccesscontrol/Roles.sol\":421:425  true */\n  0x1\n    /* \"contracts/SCaccesscontrol/Roles.sol\":398:402  role */\n  dup3\n    /* \"contracts/SCaccesscontrol/Roles.sol\":398:409  role.bearer */\n  0x0\n  add\n    /* \"contracts/SCaccesscontrol/Roles.sol\":398:418  role.bearer[account] */\n  0x0\n    /* \"contracts/SCaccesscontrol/Roles.sol\":410:417  account */\n  dup4\n    /* \"contracts/SCaccesscontrol/Roles.sol\":398:418  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n  0x0\n    /* \"contracts/SCaccesscontrol/Roles.sol\":398:425  role.bearer[account] = true */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SCaccesscontrol/Roles.sol\":259:431  function add(Role storage role, address account) internal {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SCaccesscontrol/Roles.sol\":761:934  function has(Role storage role, address account)\r... */\ntag_13:\n    /* \"contracts/SCaccesscontrol/Roles.sol\":848:852  bool */\n  0x0\n    /* \"contracts/SCaccesscontrol/Roles.sol\":891:892  0 */\n  dup1\n    /* \"contracts/SCaccesscontrol/Roles.sol\":872:893  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/SCaccesscontrol/Roles.sol\":872:879  account */\n  dup3\n    /* \"contracts/SCaccesscontrol/Roles.sol\":872:893  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/SCaccesscontrol/Roles.sol\":864:894  require(account != address(0)) */\n  iszero\n  iszero\n  tag_16\n  jumpi\n  0x0\n  dup1\n  revert\ntag_16:\n    /* \"contracts/SCaccesscontrol/Roles.sol\":908:912  role */\n  dup3\n    /* \"contracts/SCaccesscontrol/Roles.sol\":908:919  role.bearer */\n  0x0\n  add\n    /* \"contracts/SCaccesscontrol/Roles.sol\":908:928  role.bearer[account] */\n  0x0\n    /* \"contracts/SCaccesscontrol/Roles.sol\":920:927  account */\n  dup4\n    /* \"contracts/SCaccesscontrol/Roles.sol\":908:928  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/SCaccesscontrol/Roles.sol\":901:928  return role.bearer[account] */\n  swap1\n  pop\n    /* \"contracts/SCaccesscontrol/Roles.sol\":761:934  function has(Role storage role, address account)\r... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":175:2084  contract CarParts_DistributorRole {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":175:2084  contract CarParts_DistributorRole {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x1210a1d8\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8925a06e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe49a83be\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1206:1334  function addCarParts_Distributor(address account) public onlyCarParts_Distributor {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1206:1334  function addCarParts_Distributor(address account) public onlyCarParts_Distributor {\r... */\n      pop\n      tag_6\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_7:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1206:1334  function addCarParts_Distributor(address account) public onlyCarParts_Distributor {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_8)\n    tag_6:\n      stop\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1417:1516  function renounceCarParts_Distributor() public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1417:1516  function renounceCarParts_Distributor() public {\r... */\n      pop\n      tag_10\n      jump(tag_11)\n    tag_10:\n      stop\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1000:1130  function isCarParts_Distributor(address account) public view returns (bool) {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1000:1130  function isCarParts_Distributor(address account) public view returns (bool) {\r... */\n      pop\n      tag_13\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1000:1130  function isCarParts_Distributor(address account) public view returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_15)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1206:1334  function addCarParts_Distributor(address account) public onlyCarParts_Distributor {\r... */\n    tag_8:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":877:911  isCarParts_Distributor(msg.sender) */\n      tag_17\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":900:910  msg.sender */\n      caller\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":877:899  isCarParts_Distributor */\n      tag_15\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":877:911  isCarParts_Distributor(msg.sender) */\n      jump\t// in\n    tag_17:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":869:912  require(isCarParts_Distributor(msg.sender)) */\n      iszero\n      iszero\n      tag_18\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_18:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1295:1328  _addCarParts_Distributor(account) */\n      tag_20\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1320:1327  account */\n      dup2\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1295:1319  _addCarParts_Distributor */\n      tag_21\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1295:1328  _addCarParts_Distributor(account) */\n      jump\t// in\n    tag_20:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1206:1334  function addCarParts_Distributor(address account) public onlyCarParts_Distributor {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1417:1516  function renounceCarParts_Distributor() public {\r... */\n    tag_11:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1471:1510  _removeCarParts_Distributor(msg.sender) */\n      tag_23\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1499:1509  msg.sender */\n      caller\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1471:1498  _removeCarParts_Distributor */\n      tag_24\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1471:1510  _removeCarParts_Distributor(msg.sender) */\n      jump\t// in\n    tag_23:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1417:1516  function renounceCarParts_Distributor() public {\r... */\n      jump\t// out\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1000:1130  function isCarParts_Distributor(address account) public view returns (bool) {\r... */\n    tag_15:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1070:1074  bool */\n      0x0\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1090:1124  CarParts_distributors.has(account) */\n      tag_26\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1116:1123  account */\n      dup3\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1090:1111  CarParts_distributors */\n      0x0\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1090:1115  CarParts_distributors.has */\n      tag_27\n      swap1\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1090:1124  CarParts_distributors.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_26:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1083:1124  return CarParts_distributors.has(account) */\n      swap1\n      pop\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1000:1130  function isCarParts_Distributor(address account) public view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1637:1790  function _addCarParts_Distributor(address account) internal {\r... */\n    tag_21:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1704:1738  CarParts_distributors.add(account) */\n      tag_29\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1730:1737  account */\n      dup2\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1704:1725  CarParts_distributors */\n      0x0\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1704:1729  CarParts_distributors.add */\n      tag_30\n      swap1\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1704:1738  CarParts_distributors.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_29:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1776:1783  account */\n      dup1\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1750:1784  CarParts_DistributorAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf7da286df490d50d713a7db337e873dba3f443fb4d6fd500f71dd90c155eb5c3\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1637:1790  function _addCarParts_Distributor(address account) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1920:2081  function _removeCarParts_Distributor(address account) internal {\r... */\n    tag_24:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1990:2027  CarParts_distributors.remove(account) */\n      tag_32\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":2019:2026  account */\n      dup2\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1990:2011  CarParts_distributors */\n      0x0\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1990:2018  CarParts_distributors.remove */\n      tag_33\n      swap1\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1990:2027  CarParts_distributors.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_32:\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":2067:2074  account */\n      dup1\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":2039:2075  CarParts_DistributorRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3e3f7c027517f367a53ebcefd15973458bf78d9b6d5b0978f4a4d3d3f646cf96\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":1920:2081  function _removeCarParts_Distributor(address account) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/SCaccesscontrol/Roles.sol\":761:934  function has(Role storage role, address account)\r... */\n    tag_27:\n        /* \"contracts/SCaccesscontrol/Roles.sol\":848:852  bool */\n      0x0\n        /* \"contracts/SCaccesscontrol/Roles.sol\":891:892  0 */\n      dup1\n        /* \"contracts/SCaccesscontrol/Roles.sol\":872:893  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SCaccesscontrol/Roles.sol\":872:879  account */\n      dup3\n        /* \"contracts/SCaccesscontrol/Roles.sol\":872:893  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SCaccesscontrol/Roles.sol\":864:894  require(account != address(0)) */\n      iszero\n      iszero\n      tag_35\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_35:\n        /* \"contracts/SCaccesscontrol/Roles.sol\":908:912  role */\n      dup3\n        /* \"contracts/SCaccesscontrol/Roles.sol\":908:919  role.bearer */\n      0x0\n      add\n        /* \"contracts/SCaccesscontrol/Roles.sol\":908:928  role.bearer[account] */\n      0x0\n        /* \"contracts/SCaccesscontrol/Roles.sol\":920:927  account */\n      dup4\n        /* \"contracts/SCaccesscontrol/Roles.sol\":908:928  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SCaccesscontrol/Roles.sol\":901:928  return role.bearer[account] */\n      swap1\n      pop\n        /* \"contracts/SCaccesscontrol/Roles.sol\":761:934  function has(Role storage role, address account)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SCaccesscontrol/Roles.sol\":259:431  function add(Role storage role, address account) internal {\r... */\n    tag_30:\n        /* \"contracts/SCaccesscontrol/Roles.sol\":351:352  0 */\n      0x0\n        /* \"contracts/SCaccesscontrol/Roles.sol\":332:353  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SCaccesscontrol/Roles.sol\":332:339  account */\n      dup2\n        /* \"contracts/SCaccesscontrol/Roles.sol\":332:353  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SCaccesscontrol/Roles.sol\":324:354  require(account != address(0)) */\n      iszero\n      iszero\n      tag_37\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_37:\n        /* \"contracts/SCaccesscontrol/Roles.sol\":370:388  has(role, account) */\n      tag_38\n        /* \"contracts/SCaccesscontrol/Roles.sol\":374:378  role */\n      dup3\n        /* \"contracts/SCaccesscontrol/Roles.sol\":380:387  account */\n      dup3\n        /* \"contracts/SCaccesscontrol/Roles.sol\":370:373  has */\n      tag_27\n        /* \"contracts/SCaccesscontrol/Roles.sol\":370:388  has(role, account) */\n      jump\t// in\n    tag_38:\n        /* \"contracts/SCaccesscontrol/Roles.sol\":369:388  !has(role, account) */\n      iszero\n        /* \"contracts/SCaccesscontrol/Roles.sol\":361:389  require(!has(role, account)) */\n      iszero\n      iszero\n      tag_39\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_39:\n        /* \"contracts/SCaccesscontrol/Roles.sol\":421:425  true */\n      0x1\n        /* \"contracts/SCaccesscontrol/Roles.sol\":398:402  role */\n      dup3\n        /* \"contracts/SCaccesscontrol/Roles.sol\":398:409  role.bearer */\n      0x0\n      add\n        /* \"contracts/SCaccesscontrol/Roles.sol\":398:418  role.bearer[account] */\n      0x0\n        /* \"contracts/SCaccesscontrol/Roles.sol\":410:417  account */\n      dup4\n        /* \"contracts/SCaccesscontrol/Roles.sol\":398:418  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/SCaccesscontrol/Roles.sol\":398:425  role.bearer[account] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SCaccesscontrol/Roles.sol\":259:431  function add(Role storage role, address account) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SCaccesscontrol/Roles.sol\":502:677  function remove(Role storage role, address account) internal {\r... */\n    tag_33:\n        /* \"contracts/SCaccesscontrol/Roles.sol\":597:598  0 */\n      0x0\n        /* \"contracts/SCaccesscontrol/Roles.sol\":578:599  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SCaccesscontrol/Roles.sol\":578:585  account */\n      dup2\n        /* \"contracts/SCaccesscontrol/Roles.sol\":578:599  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SCaccesscontrol/Roles.sol\":570:600  require(account != address(0)) */\n      iszero\n      iszero\n      tag_41\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_41:\n        /* \"contracts/SCaccesscontrol/Roles.sol\":615:633  has(role, account) */\n      tag_42\n        /* \"contracts/SCaccesscontrol/Roles.sol\":619:623  role */\n      dup3\n        /* \"contracts/SCaccesscontrol/Roles.sol\":625:632  account */\n      dup3\n        /* \"contracts/SCaccesscontrol/Roles.sol\":615:618  has */\n      tag_27\n        /* \"contracts/SCaccesscontrol/Roles.sol\":615:633  has(role, account) */\n      jump\t// in\n    tag_42:\n        /* \"contracts/SCaccesscontrol/Roles.sol\":607:634  require(has(role, account)) */\n      iszero\n      iszero\n      tag_43\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_43:\n        /* \"contracts/SCaccesscontrol/Roles.sol\":666:671  false */\n      0x0\n        /* \"contracts/SCaccesscontrol/Roles.sol\":643:647  role */\n      dup3\n        /* \"contracts/SCaccesscontrol/Roles.sol\":643:654  role.bearer */\n      0x0\n      add\n        /* \"contracts/SCaccesscontrol/Roles.sol\":643:663  role.bearer[account] */\n      0x0\n        /* \"contracts/SCaccesscontrol/Roles.sol\":655:662  account */\n      dup4\n        /* \"contracts/SCaccesscontrol/Roles.sol\":643:663  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/SCaccesscontrol/Roles.sol\":643:671  role.bearer[account] = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SCaccesscontrol/Roles.sol\":502:677  function remove(Role storage role, address account) internal {\r... */\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582058b4bb9c32df860403cb1100a57155492271f176e4816eb1ad2cd31ec2ced9b20029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506100293361002e640100000000026401000000009004565b6101e8565b61004f816000610095640100000000026102bd179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167ff7da286df490d50d713a7db337e873dba3f443fb4d6fd500f71dd90c155eb5c360405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156100d157600080fd5b6100ea8282610154640100000000026401000000009004565b1515156100f657600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561019157600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610448806101f76000396000f3fe608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631210a1d81461005c5780638925a06e146100ad578063e49a83be146100c4575b600080fd5b34801561006857600080fd5b506100ab6004803603602081101561007f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061012d565b005b3480156100b957600080fd5b506100c261014d565b005b3480156100d057600080fd5b50610113600480360360208110156100e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610158565b604051808215151515815260200191505060405180910390f35b61013633610158565b151561014157600080fd5b61014a81610175565b50565b610156336101cf565b565b600061016e82600061022990919063ffffffff16565b9050919050565b6101898160006102bd90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167ff7da286df490d50d713a7db337e873dba3f443fb4d6fd500f71dd90c155eb5c360405160405180910390a250565b6101e381600061036d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3e3f7c027517f367a53ebcefd15973458bf78d9b6d5b0978f4a4d3d3f646cf9660405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561026657600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156102f957600080fd5b6103038282610229565b15151561030f57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156103a957600080fd5b6103b38282610229565b15156103be57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea165627a7a7230582058b4bb9c32df860403cb1100a57155492271f176e4816eb1ad2cd31ec2ced9b20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29 CALLER PUSH2 0x2E PUSH5 0x100000000 MUL PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x4F DUP2 PUSH1 0x0 PUSH2 0x95 PUSH5 0x100000000 MUL PUSH2 0x2BD OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7DA286DF490D50D713A7DB337E873DBA3F443FB4D6FD500F71DD90C155EB5C3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA DUP3 DUP3 PUSH2 0x154 PUSH5 0x100000000 MUL PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST ISZERO ISZERO ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x448 DUP1 PUSH2 0x1F7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x1210A1D8 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8925A06E EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xE49A83BE EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 CALLER PUSH2 0x158 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A DUP2 PUSH2 0x175 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x156 CALLER PUSH2 0x1CF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E DUP3 PUSH1 0x0 PUSH2 0x229 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189 DUP2 PUSH1 0x0 PUSH2 0x2BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7DA286DF490D50D713A7DB337E873DBA3F443FB4D6FD500F71DD90C155EB5C3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1E3 DUP2 PUSH1 0x0 PUSH2 0x36D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3E3F7C027517F367A53EBCEFD15973458BF78D9B6D5B0978F4A4D3D3F646CF96 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x303 DUP3 DUP3 PUSH2 0x229 JUMP JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B3 DUP3 DUP3 PUSH2 0x229 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 PC 0xb4 0xbb SWAP13 ORIGIN 0xdf DUP7 DIV SUB 0xcb GT STOP 0xa5 PUSH18 0x55492271F176E4816EB1AD2CD31EC2CED9B2 STOP 0x29 ",
							"sourceMap": "175:1909:0:-;;;668:70;8:9:-1;5:2;;;30:1;27;20:12;5:2;668:70:0;696:36;721:10;696:24;;;:36;;;:::i;:::-;175:1909;;1637:153;1704:34;1730:7;1704:21;:25;;;;;;:34;;;;;:::i;:::-;1776:7;1750:34;;;;;;;;;;;;1637:153;:::o;259:172:1:-;351:1;332:21;;:7;:21;;;;324:30;;;;;;;;370:18;374:4;380:7;370:3;;;:18;;;:::i;:::-;369:19;361:28;;;;;;;;421:4;398;:11;;:20;410:7;398:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:172;;:::o;761:173::-;848:4;891:1;872:21;;:7;:21;;;;864:30;;;;;;;;908:4;:11;;:20;920:7;908:20;;;;;;;;;;;;;;;;;;;;;;;;;901:27;;761:173;;;;:::o;175:1909:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631210a1d81461005c5780638925a06e146100ad578063e49a83be146100c4575b600080fd5b34801561006857600080fd5b506100ab6004803603602081101561007f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061012d565b005b3480156100b957600080fd5b506100c261014d565b005b3480156100d057600080fd5b50610113600480360360208110156100e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610158565b604051808215151515815260200191505060405180910390f35b61013633610158565b151561014157600080fd5b61014a81610175565b50565b610156336101cf565b565b600061016e82600061022990919063ffffffff16565b9050919050565b6101898160006102bd90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167ff7da286df490d50d713a7db337e873dba3f443fb4d6fd500f71dd90c155eb5c360405160405180910390a250565b6101e381600061036d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3e3f7c027517f367a53ebcefd15973458bf78d9b6d5b0978f4a4d3d3f646cf9660405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561026657600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156102f957600080fd5b6103038282610229565b15151561030f57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156103a957600080fd5b6103b38282610229565b15156103be57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea165627a7a7230582058b4bb9c32df860403cb1100a57155492271f176e4816eb1ad2cd31ec2ced9b20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x1210A1D8 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8925A06E EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xE49A83BE EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 CALLER PUSH2 0x158 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A DUP2 PUSH2 0x175 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x156 CALLER PUSH2 0x1CF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E DUP3 PUSH1 0x0 PUSH2 0x229 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189 DUP2 PUSH1 0x0 PUSH2 0x2BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7DA286DF490D50D713A7DB337E873DBA3F443FB4D6FD500F71DD90C155EB5C3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1E3 DUP2 PUSH1 0x0 PUSH2 0x36D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3E3F7C027517F367A53EBCEFD15973458BF78D9B6D5B0978F4A4D3D3F646CF96 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x303 DUP3 DUP3 PUSH2 0x229 JUMP JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B3 DUP3 DUP3 PUSH2 0x229 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 PC 0xb4 0xbb SWAP13 ORIGIN 0xdf DUP7 DIV SUB 0xcb GT STOP 0xa5 PUSH18 0x55492271F176E4816EB1AD2CD31EC2CED9B2 STOP 0x29 ",
							"sourceMap": "175:1909:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1206:128;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1206:128:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1206:128:0;;;;;;;;;;;;;;;;;;;;;;1417:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1417:99:0;;;;;;1000:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1000:130:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1000:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1206:128;877:34;900:10;877:22;:34::i;:::-;869:43;;;;;;;;1295:33;1320:7;1295:24;:33::i;:::-;1206:128;:::o;1417:99::-;1471:39;1499:10;1471:27;:39::i;:::-;1417:99::o;1000:130::-;1070:4;1090:34;1116:7;1090:21;:25;;:34;;;;:::i;:::-;1083:41;;1000:130;;;:::o;1637:153::-;1704:34;1730:7;1704:21;:25;;:34;;;;:::i;:::-;1776:7;1750:34;;;;;;;;;;;;1637:153;:::o;1920:161::-;1990:37;2019:7;1990:21;:28;;:37;;;;:::i;:::-;2067:7;2039:36;;;;;;;;;;;;1920:161;:::o;761:173:1:-;848:4;891:1;872:21;;:7;:21;;;;864:30;;;;;;;;908:4;:11;;:20;920:7;908:20;;;;;;;;;;;;;;;;;;;;;;;;;901:27;;761:173;;;;:::o;259:172::-;351:1;332:21;;:7;:21;;;;324:30;;;;;;;;370:18;374:4;380:7;370:3;:18::i;:::-;369:19;361:28;;;;;;;;421:4;398;:11;;:20;410:7;398:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:172;;:::o;502:175::-;597:1;578:21;;:7;:21;;;;570:30;;;;;;;;615:18;619:4;625:7;615:3;:18::i;:::-;607:27;;;;;;;;666:5;643:4;:11;;:20;655:7;643:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;502:175;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "219200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addCarParts_Distributor(address)": "infinite",
								"isCarParts_Distributor(address)": "infinite",
								"renounceCarParts_Distributor()": "infinite"
							},
							"internal": {
								"_addCarParts_Distributor(address)": "infinite",
								"_removeCarParts_Distributor(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 2084,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "MSTORE"
								},
								{
									"begin": 668,
									"end": 738,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 668,
									"end": 738,
									"name": "POP"
								},
								{
									"begin": 696,
									"end": 732,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 721,
									"end": 731,
									"name": "CALLER"
								},
								{
									"begin": 696,
									"end": 720,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 696,
									"end": 720,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 696,
									"end": 720,
									"name": "MUL"
								},
								{
									"begin": 696,
									"end": 732,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 696,
									"end": 732,
									"name": "SWAP1"
								},
								{
									"begin": 696,
									"end": 732,
									"name": "DIV"
								},
								{
									"begin": 696,
									"end": 732,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 696,
									"end": 732,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 696,
									"end": 732,
									"name": "JUMPDEST"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "JUMP"
								},
								{
									"begin": 1637,
									"end": 1790,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 1637,
									"end": 1790,
									"name": "JUMPDEST"
								},
								{
									"begin": 1704,
									"end": 1738,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 1730,
									"end": 1737,
									"name": "DUP2"
								},
								{
									"begin": 1704,
									"end": 1725,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1704,
									"end": 1729,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 1704,
									"end": 1729,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 1704,
									"end": 1729,
									"name": "MUL"
								},
								{
									"begin": 1704,
									"end": 1729,
									"name": "PUSH [tag]",
									"value": "18446744073709551646"
								},
								{
									"begin": 1704,
									"end": 1729,
									"name": "OR"
								},
								{
									"begin": 1704,
									"end": 1729,
									"name": "SWAP1"
								},
								{
									"begin": 1704,
									"end": 1738,
									"name": "SWAP2"
								},
								{
									"begin": 1704,
									"end": 1738,
									"name": "SWAP1"
								},
								{
									"begin": 1704,
									"end": 1738,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 1704,
									"end": 1738,
									"name": "SWAP1"
								},
								{
									"begin": 1704,
									"end": 1738,
									"name": "DIV"
								},
								{
									"begin": 1704,
									"end": 1738,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1704,
									"end": 1738,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 1704,
									"end": 1738,
									"name": "JUMPDEST"
								},
								{
									"begin": 1776,
									"end": 1783,
									"name": "DUP1"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "AND"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "PUSH",
									"value": "F7DA286DF490D50D713A7DB337E873DBA3F443FB4D6FD500F71DD90C155EB5C3"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "MLOAD"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "MLOAD"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "DUP1"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "SWAP2"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "SUB"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "SWAP1"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "LOG2"
								},
								{
									"begin": 1637,
									"end": 1790,
									"name": "POP"
								},
								{
									"begin": 1637,
									"end": 1790,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 259,
									"end": 431,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 259,
									"end": 431,
									"name": "JUMPDEST"
								},
								{
									"begin": 351,
									"end": 352,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 332,
									"end": 353,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 332,
									"end": 353,
									"name": "AND"
								},
								{
									"begin": 332,
									"end": 339,
									"name": "DUP2"
								},
								{
									"begin": 332,
									"end": 353,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 332,
									"end": 353,
									"name": "AND"
								},
								{
									"begin": 332,
									"end": 353,
									"name": "EQ"
								},
								{
									"begin": 332,
									"end": 353,
									"name": "ISZERO"
								},
								{
									"begin": 324,
									"end": 354,
									"name": "ISZERO"
								},
								{
									"begin": 324,
									"end": 354,
									"name": "ISZERO"
								},
								{
									"begin": 324,
									"end": 354,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 324,
									"end": 354,
									"name": "JUMPI"
								},
								{
									"begin": 324,
									"end": 354,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 324,
									"end": 354,
									"name": "DUP1"
								},
								{
									"begin": 324,
									"end": 354,
									"name": "REVERT"
								},
								{
									"begin": 324,
									"end": 354,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 324,
									"end": 354,
									"name": "JUMPDEST"
								},
								{
									"begin": 370,
									"end": 388,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 374,
									"end": 378,
									"name": "DUP3"
								},
								{
									"begin": 380,
									"end": 387,
									"name": "DUP3"
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 370,
									"end": 373,
									"name": "MUL"
								},
								{
									"begin": 370,
									"end": 388,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 370,
									"end": 388,
									"name": "SWAP1"
								},
								{
									"begin": 370,
									"end": 388,
									"name": "DIV"
								},
								{
									"begin": 370,
									"end": 388,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 370,
									"end": 388,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 370,
									"end": 388,
									"name": "JUMPDEST"
								},
								{
									"begin": 369,
									"end": 388,
									"name": "ISZERO"
								},
								{
									"begin": 361,
									"end": 389,
									"name": "ISZERO"
								},
								{
									"begin": 361,
									"end": 389,
									"name": "ISZERO"
								},
								{
									"begin": 361,
									"end": 389,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 361,
									"end": 389,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 389,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 361,
									"end": 389,
									"name": "DUP1"
								},
								{
									"begin": 361,
									"end": 389,
									"name": "REVERT"
								},
								{
									"begin": 361,
									"end": 389,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 361,
									"end": 389,
									"name": "JUMPDEST"
								},
								{
									"begin": 421,
									"end": 425,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 398,
									"end": 402,
									"name": "DUP3"
								},
								{
									"begin": 398,
									"end": 409,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 398,
									"end": 409,
									"name": "ADD"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 410,
									"end": 417,
									"name": "DUP4"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "AND"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "AND"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "DUP2"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "MSTORE"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "ADD"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "SWAP1"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "DUP2"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "MSTORE"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "ADD"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "KECCAK256"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "EXP"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "DUP2"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "SLOAD"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "DUP2"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "MUL"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "NOT"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "AND"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "SWAP1"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "DUP4"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "ISZERO"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "ISZERO"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "MUL"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "OR"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "SWAP1"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "SSTORE"
								},
								{
									"begin": 398,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 259,
									"end": 431,
									"name": "POP"
								},
								{
									"begin": 259,
									"end": 431,
									"name": "POP"
								},
								{
									"begin": 259,
									"end": 431,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 761,
									"end": 934,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 761,
									"end": 934,
									"name": "JUMPDEST"
								},
								{
									"begin": 848,
									"end": 852,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 891,
									"end": 892,
									"name": "DUP1"
								},
								{
									"begin": 872,
									"end": 893,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 872,
									"end": 893,
									"name": "AND"
								},
								{
									"begin": 872,
									"end": 879,
									"name": "DUP3"
								},
								{
									"begin": 872,
									"end": 893,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 872,
									"end": 893,
									"name": "AND"
								},
								{
									"begin": 872,
									"end": 893,
									"name": "EQ"
								},
								{
									"begin": 872,
									"end": 893,
									"name": "ISZERO"
								},
								{
									"begin": 864,
									"end": 894,
									"name": "ISZERO"
								},
								{
									"begin": 864,
									"end": 894,
									"name": "ISZERO"
								},
								{
									"begin": 864,
									"end": 894,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 864,
									"end": 894,
									"name": "JUMPI"
								},
								{
									"begin": 864,
									"end": 894,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 864,
									"end": 894,
									"name": "DUP1"
								},
								{
									"begin": 864,
									"end": 894,
									"name": "REVERT"
								},
								{
									"begin": 864,
									"end": 894,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 864,
									"end": 894,
									"name": "JUMPDEST"
								},
								{
									"begin": 908,
									"end": 912,
									"name": "DUP3"
								},
								{
									"begin": 908,
									"end": 919,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 908,
									"end": 919,
									"name": "ADD"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 920,
									"end": 927,
									"name": "DUP4"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "AND"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "AND"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "DUP2"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "MSTORE"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "ADD"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "SWAP1"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "DUP2"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "MSTORE"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "ADD"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "KECCAK256"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "SWAP1"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "SLOAD"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "SWAP1"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "EXP"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "SWAP1"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "DIV"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 908,
									"end": 928,
									"name": "AND"
								},
								{
									"begin": 901,
									"end": 928,
									"name": "SWAP1"
								},
								{
									"begin": 901,
									"end": 928,
									"name": "POP"
								},
								{
									"begin": 761,
									"end": 934,
									"name": "SWAP3"
								},
								{
									"begin": 761,
									"end": 934,
									"name": "SWAP2"
								},
								{
									"begin": 761,
									"end": 934,
									"name": "POP"
								},
								{
									"begin": 761,
									"end": 934,
									"name": "POP"
								},
								{
									"begin": 761,
									"end": 934,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "JUMPDEST"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "DUP1"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "CODECOPY"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 175,
									"end": 2084,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582058b4bb9c32df860403cb1100a57155492271f176e4816eb1ad2cd31ec2ced9b20029",
									".code": [
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "LT"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "JUMPI"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "DIV"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH",
											"value": "1210A1D8"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "EQ"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "JUMPI"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH",
											"value": "8925A06E"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "EQ"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "JUMPI"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH",
											"value": "E49A83BE"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "EQ"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "JUMPI"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 2084,
											"name": "REVERT"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "JUMPDEST"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "POP"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "DUP1"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "DUP2"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "ADD"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "SWAP1"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "DUP1"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "DUP1"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "AND"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "SWAP1"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "ADD"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "SWAP1"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "SWAP3"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "SWAP2"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "SWAP1"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "POP"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "POP"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "POP"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "JUMP"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "JUMPDEST"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "STOP"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "JUMPDEST"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "POP"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "JUMP"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "JUMPDEST"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "STOP"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "DUP1"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "DUP2"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "ADD"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "DUP1"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "DUP1"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "AND"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "ADD"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SWAP3"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SWAP2"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "JUMP"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "MLOAD"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "DUP1"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "DUP3"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "ISZERO"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "ISZERO"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "ISZERO"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "ISZERO"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "DUP2"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "MSTORE"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "ADD"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SWAP2"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "MLOAD"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "DUP1"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SWAP2"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SUB"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "RETURN"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "JUMPDEST"
										},
										{
											"begin": 877,
											"end": 911,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 900,
											"end": 910,
											"name": "CALLER"
										},
										{
											"begin": 877,
											"end": 899,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 877,
											"end": 911,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 911,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 877,
											"end": 911,
											"name": "JUMPDEST"
										},
										{
											"begin": 869,
											"end": 912,
											"name": "ISZERO"
										},
										{
											"begin": 869,
											"end": 912,
											"name": "ISZERO"
										},
										{
											"begin": 869,
											"end": 912,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 869,
											"end": 912,
											"name": "JUMPI"
										},
										{
											"begin": 869,
											"end": 912,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 869,
											"end": 912,
											"name": "DUP1"
										},
										{
											"begin": 869,
											"end": 912,
											"name": "REVERT"
										},
										{
											"begin": 869,
											"end": 912,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 869,
											"end": 912,
											"name": "JUMPDEST"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "DUP2"
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "JUMPDEST"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "POP"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "JUMPDEST"
										},
										{
											"begin": 1471,
											"end": 1510,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1499,
											"end": 1509,
											"name": "CALLER"
										},
										{
											"begin": 1471,
											"end": 1498,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1471,
											"end": 1510,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1471,
											"end": 1510,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1471,
											"end": 1510,
											"name": "JUMPDEST"
										},
										{
											"begin": 1417,
											"end": 1516,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1124,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "DUP3"
										},
										{
											"begin": 1090,
											"end": 1111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "SWAP1"
										},
										{
											"begin": 1090,
											"end": 1124,
											"name": "SWAP2"
										},
										{
											"begin": 1090,
											"end": 1124,
											"name": "SWAP1"
										},
										{
											"begin": 1090,
											"end": 1124,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1090,
											"end": 1124,
											"name": "AND"
										},
										{
											"begin": 1090,
											"end": 1124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1090,
											"end": 1124,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1090,
											"end": 1124,
											"name": "JUMPDEST"
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "SWAP1"
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "POP"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SWAP2"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1000,
											"end": 1130,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1637,
											"end": 1790,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1637,
											"end": 1790,
											"name": "JUMPDEST"
										},
										{
											"begin": 1704,
											"end": 1738,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1730,
											"end": 1737,
											"name": "DUP2"
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1729,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1704,
											"end": 1729,
											"name": "SWAP1"
										},
										{
											"begin": 1704,
											"end": 1738,
											"name": "SWAP2"
										},
										{
											"begin": 1704,
											"end": 1738,
											"name": "SWAP1"
										},
										{
											"begin": 1704,
											"end": 1738,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1704,
											"end": 1738,
											"name": "AND"
										},
										{
											"begin": 1704,
											"end": 1738,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1704,
											"end": 1738,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1704,
											"end": 1738,
											"name": "JUMPDEST"
										},
										{
											"begin": 1776,
											"end": 1783,
											"name": "DUP1"
										},
										{
											"begin": 1750,
											"end": 1784,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1750,
											"end": 1784,
											"name": "AND"
										},
										{
											"begin": 1750,
											"end": 1784,
											"name": "PUSH",
											"value": "F7DA286DF490D50D713A7DB337E873DBA3F443FB4D6FD500F71DD90C155EB5C3"
										},
										{
											"begin": 1750,
											"end": 1784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1784,
											"name": "MLOAD"
										},
										{
											"begin": 1750,
											"end": 1784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1784,
											"name": "MLOAD"
										},
										{
											"begin": 1750,
											"end": 1784,
											"name": "DUP1"
										},
										{
											"begin": 1750,
											"end": 1784,
											"name": "SWAP2"
										},
										{
											"begin": 1750,
											"end": 1784,
											"name": "SUB"
										},
										{
											"begin": 1750,
											"end": 1784,
											"name": "SWAP1"
										},
										{
											"begin": 1750,
											"end": 1784,
											"name": "LOG2"
										},
										{
											"begin": 1637,
											"end": 1790,
											"name": "POP"
										},
										{
											"begin": 1637,
											"end": 1790,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1920,
											"end": 2081,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1920,
											"end": 2081,
											"name": "JUMPDEST"
										},
										{
											"begin": 1990,
											"end": 2027,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2019,
											"end": 2026,
											"name": "DUP2"
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "SWAP1"
										},
										{
											"begin": 1990,
											"end": 2027,
											"name": "SWAP2"
										},
										{
											"begin": 1990,
											"end": 2027,
											"name": "SWAP1"
										},
										{
											"begin": 1990,
											"end": 2027,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2027,
											"name": "AND"
										},
										{
											"begin": 1990,
											"end": 2027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2027,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1990,
											"end": 2027,
											"name": "JUMPDEST"
										},
										{
											"begin": 2067,
											"end": 2074,
											"name": "DUP1"
										},
										{
											"begin": 2039,
											"end": 2075,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2039,
											"end": 2075,
											"name": "AND"
										},
										{
											"begin": 2039,
											"end": 2075,
											"name": "PUSH",
											"value": "3E3F7C027517F367A53EBCEFD15973458BF78D9B6D5B0978F4A4D3D3F646CF96"
										},
										{
											"begin": 2039,
											"end": 2075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2075,
											"name": "MLOAD"
										},
										{
											"begin": 2039,
											"end": 2075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2075,
											"name": "MLOAD"
										},
										{
											"begin": 2039,
											"end": 2075,
											"name": "DUP1"
										},
										{
											"begin": 2039,
											"end": 2075,
											"name": "SWAP2"
										},
										{
											"begin": 2039,
											"end": 2075,
											"name": "SUB"
										},
										{
											"begin": 2039,
											"end": 2075,
											"name": "SWAP1"
										},
										{
											"begin": 2039,
											"end": 2075,
											"name": "LOG2"
										},
										{
											"begin": 1920,
											"end": 2081,
											"name": "POP"
										},
										{
											"begin": 1920,
											"end": 2081,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 761,
											"end": 934,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 761,
											"end": 934,
											"name": "JUMPDEST"
										},
										{
											"begin": 848,
											"end": 852,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 891,
											"end": 892,
											"name": "DUP1"
										},
										{
											"begin": 872,
											"end": 893,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 872,
											"end": 893,
											"name": "AND"
										},
										{
											"begin": 872,
											"end": 879,
											"name": "DUP3"
										},
										{
											"begin": 872,
											"end": 893,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 872,
											"end": 893,
											"name": "AND"
										},
										{
											"begin": 872,
											"end": 893,
											"name": "EQ"
										},
										{
											"begin": 872,
											"end": 893,
											"name": "ISZERO"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "ISZERO"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "ISZERO"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "JUMPI"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "DUP1"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "REVERT"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 864,
											"end": 894,
											"name": "JUMPDEST"
										},
										{
											"begin": 908,
											"end": 912,
											"name": "DUP3"
										},
										{
											"begin": 908,
											"end": 919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 908,
											"end": 919,
											"name": "ADD"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 920,
											"end": 927,
											"name": "DUP4"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "AND"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "AND"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "DUP2"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "MSTORE"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "DUP2"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "MSTORE"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "KECCAK256"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SLOAD"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "EXP"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "DIV"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "AND"
										},
										{
											"begin": 901,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 901,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 761,
											"end": 934,
											"name": "SWAP3"
										},
										{
											"begin": 761,
											"end": 934,
											"name": "SWAP2"
										},
										{
											"begin": 761,
											"end": 934,
											"name": "POP"
										},
										{
											"begin": 761,
											"end": 934,
											"name": "POP"
										},
										{
											"begin": 761,
											"end": 934,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 259,
											"end": 431,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 259,
											"end": 431,
											"name": "JUMPDEST"
										},
										{
											"begin": 351,
											"end": 352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "AND"
										},
										{
											"begin": 332,
											"end": 339,
											"name": "DUP2"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "AND"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "EQ"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "ISZERO"
										},
										{
											"begin": 324,
											"end": 354,
											"name": "ISZERO"
										},
										{
											"begin": 324,
											"end": 354,
											"name": "ISZERO"
										},
										{
											"begin": 324,
											"end": 354,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 324,
											"end": 354,
											"name": "JUMPI"
										},
										{
											"begin": 324,
											"end": 354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 324,
											"end": 354,
											"name": "DUP1"
										},
										{
											"begin": 324,
											"end": 354,
											"name": "REVERT"
										},
										{
											"begin": 324,
											"end": 354,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 324,
											"end": 354,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 374,
											"end": 378,
											"name": "DUP3"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 370,
											"end": 373,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 370,
											"end": 388,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 388,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 370,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "ISZERO"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "ISZERO"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "ISZERO"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "JUMPI"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "REVERT"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 361,
											"end": 389,
											"name": "JUMPDEST"
										},
										{
											"begin": 421,
											"end": 425,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 398,
											"end": 402,
											"name": "DUP3"
										},
										{
											"begin": 398,
											"end": 409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 409,
											"name": "ADD"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 410,
											"end": 417,
											"name": "DUP4"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "AND"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "AND"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "KECCAK256"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "EXP"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "SLOAD"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "MUL"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "NOT"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "AND"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "DUP4"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "ISZERO"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "ISZERO"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "MUL"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "OR"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "SSTORE"
										},
										{
											"begin": 398,
											"end": 425,
											"name": "POP"
										},
										{
											"begin": 259,
											"end": 431,
											"name": "POP"
										},
										{
											"begin": 259,
											"end": 431,
											"name": "POP"
										},
										{
											"begin": 259,
											"end": 431,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 502,
											"end": 677,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 502,
											"end": 677,
											"name": "JUMPDEST"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 578,
											"end": 599,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 578,
											"end": 599,
											"name": "AND"
										},
										{
											"begin": 578,
											"end": 585,
											"name": "DUP2"
										},
										{
											"begin": 578,
											"end": 599,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 578,
											"end": 599,
											"name": "AND"
										},
										{
											"begin": 578,
											"end": 599,
											"name": "EQ"
										},
										{
											"begin": 578,
											"end": 599,
											"name": "ISZERO"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "ISZERO"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "ISZERO"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "JUMPI"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "DUP1"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "REVERT"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "JUMPDEST"
										},
										{
											"begin": 615,
											"end": 633,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 619,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 625,
											"end": 632,
											"name": "DUP3"
										},
										{
											"begin": 615,
											"end": 618,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 615,
											"end": 633,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 633,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 615,
											"end": 633,
											"name": "JUMPDEST"
										},
										{
											"begin": 607,
											"end": 634,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 634,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 634,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 607,
											"end": 634,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 634,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 634,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 607,
											"end": 634,
											"name": "JUMPDEST"
										},
										{
											"begin": 666,
											"end": 671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 643,
											"end": 647,
											"name": "DUP3"
										},
										{
											"begin": 643,
											"end": 654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 643,
											"end": 654,
											"name": "ADD"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 655,
											"end": 662,
											"name": "DUP4"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "AND"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "AND"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "DUP2"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "MSTORE"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "ADD"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "SWAP1"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "DUP2"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "MSTORE"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "ADD"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "KECCAK256"
										},
										{
											"begin": 643,
											"end": 663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "EXP"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "DUP2"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "SLOAD"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "DUP2"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "MUL"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "NOT"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "AND"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "SWAP1"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "DUP4"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "ISZERO"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "ISZERO"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "MUL"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "OR"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "SWAP1"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "SSTORE"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "POP"
										},
										{
											"begin": 502,
											"end": 677,
											"name": "POP"
										},
										{
											"begin": 502,
											"end": 677,
											"name": "POP"
										},
										{
											"begin": 502,
											"end": 677,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addCarParts_Distributor(address)": "1210a1d8",
							"isCarParts_Distributor(address)": "e49a83be",
							"renounceCarParts_Distributor()": "8925a06e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addCarParts_Distributor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceCarParts_Distributor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isCarParts_Distributor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"CarParts_DistributorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"CarParts_DistributorRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":\"CarParts_DistributorRole\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SCaccesscontrol/CarParts_DistributorRole.sol\":{\"keccak256\":\"0xa3ce31630edb1ba0f299a8b8aa21af038e13b3b7824cdd5473f92b015f70c50a\",\"urls\":[\"bzzr://65f3d89ee024ed14ef4c5b285f7c9379dfe83a2a10d40d4ae4180dcc27e6f96a\"]},\"contracts/SCaccesscontrol/Roles.sol\":{\"keccak256\":\"0x3e82251c67c17585b2356f3a16c6367bf0082d152d878b46a6a060e9febdf457\",\"urls\":[\"bzzr://b6b176abc4c65d1b1190c79f225948f71b8f3df1d012e09700938c2c556d408e\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/SCaccesscontrol/Roles.sol": {
				"Roles": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing addresses assigned to a Role.\r",
						"methods": {},
						"title": "Roles\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/SCaccesscontrol/Roles.sol\":116:937  library Roles {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SCaccesscontrol/Roles.sol\":116:937  library Roles {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058205a959290c4cdedc2b2c29246e2906e22edc39ec505394314c0c35c19d133060a0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058205a959290c4cdedc2b2c29246e2906e22edc39ec505394314c0c35c19d133060a0029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 GAS SWAP6 SWAP3 SWAP1 0xc4 0xcd 0xed 0xc2 0xb2 0xc2 SWAP3 0x46 0xe2 SWAP1 PUSH15 0x22EDC39EC505394314C0C35C19D133 MOD EXP STOP 0x29 ",
							"sourceMap": "116:821:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058205a959290c4cdedc2b2c29246e2906e22edc39ec505394314c0c35c19d133060a0029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 GAS SWAP6 SWAP3 SWAP1 0xc4 0xcd 0xed 0xc2 0xb2 0xc2 SWAP3 0x46 0xe2 SWAP1 PUSH15 0x22EDC39EC505394314C0C35C19D133 MOD EXP STOP 0x29 ",
							"sourceMap": "116:821:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 937,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 937,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058205a959290c4cdedc2b2c29246e2906e22edc39ec505394314c0c35c19d133060a0029",
									".code": [
										{
											"begin": 116,
											"end": 937,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 116,
											"end": 937,
											"name": "ADDRESS"
										},
										{
											"begin": 116,
											"end": 937,
											"name": "EQ"
										},
										{
											"begin": 116,
											"end": 937,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 116,
											"end": 937,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 116,
											"end": 937,
											"name": "MSTORE"
										},
										{
											"begin": 116,
											"end": 937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 116,
											"end": 937,
											"name": "DUP1"
										},
										{
											"begin": 116,
											"end": 937,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing addresses assigned to a Role.\\r\",\"methods\":{},\"title\":\"Roles\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/SCaccesscontrol/Roles.sol\":\"Roles\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SCaccesscontrol/Roles.sol\":{\"keccak256\":\"0x3e82251c67c17585b2356f3a16c6367bf0082d152d878b46a6a060e9febdf457\",\"urls\":[\"bzzr://b6b176abc4c65d1b1190c79f225948f71b8f3df1d012e09700938c2c556d408e\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/SCaccesscontrol/CarParts_DistributorRole.sol": {
				"ast": {
					"absolutePath": "contracts/SCaccesscontrol/CarParts_DistributorRole.sol",
					"exportedSymbols": {
						"CarParts_DistributorRole": [
							102
						]
					},
					"id": 103,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:0"
						},
						{
							"absolutePath": "contracts/SCaccesscontrol/Roles.sol",
							"file": "./Roles.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 103,
							"sourceUnit": 197,
							"src": "60:21:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 102,
							"linearizedBaseContracts": [
								102
							],
							"name": "CarParts_DistributorRole",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"libraryName": {
										"contractScope": null,
										"id": 3,
										"name": "Roles",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 196,
										"src": "220:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Roles_$196",
											"typeString": "library Roles"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "214:27:0",
									"typeName": {
										"contractScope": null,
										"id": 4,
										"name": "Roles.Role",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "230:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 9,
									"name": "CarParts_DistributorAdded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "339:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "338:25:0"
									},
									"src": "307:57:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 13,
									"name": "CarParts_DistributorRemoved",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "402:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "401:25:0"
									},
									"src": "368:59:0"
								},
								{
									"constant": false,
									"id": 15,
									"name": "CarParts_distributors",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "525:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$109_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"contractScope": null,
										"id": 14,
										"name": "Roles.Role",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "525:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "689:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 19,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "721:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "721:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 18,
														"name": "_addCarParts_Distributor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "696:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "696:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "696:36:0"
											}
										]
									},
									"documentation": null,
									"id": 24,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "679:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:0"
									},
									"scope": 102,
									"src": "668:70:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "862:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 28,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 211,
																		"src": "900:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "900:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 27,
																"name": "isCarParts_Distributor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "877:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 26,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															214,
															215
														],
														"referencedDeclaration": 214,
														"src": "869:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "869:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "869:43:0"
											},
											{
												"id": 33,
												"nodeType": "PlaceholderStatement",
												"src": "919:1:0"
											}
										]
									},
									"documentation": null,
									"id": 35,
									"name": "onlyCarParts_Distributor",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:0"
									},
									"src": "826:100:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "1076:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 44,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1116:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 42,
															"name": "CarParts_distributors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1090:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$109_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 195,
														"src": "1090:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$109_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$109_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1090:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 41,
												"id": 46,
												"nodeType": "Return",
												"src": "1083:41:0"
											}
										]
									},
									"documentation": null,
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isCarParts_Distributor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1032:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1031:17:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1070:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1070:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1069:6:0"
									},
									"scope": 102,
									"src": "1000:130:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1288:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 56,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "1320:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 55,
														"name": "_addCarParts_Distributor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1295:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1295:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1295:33:0"
											}
										]
									},
									"documentation": null,
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 53,
											"modifierName": {
												"argumentTypes": null,
												"id": 52,
												"name": "onlyCarParts_Distributor",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 35,
												"src": "1263:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1263:24:0"
										}
									],
									"name": "addCarParts_Distributor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1239:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1238:17:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:0:0"
									},
									"scope": 102,
									"src": "1206:128:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "1464:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 64,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "1499:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1499:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 63,
														"name": "_removeCarParts_Distributor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "1471:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1471:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1471:39:0"
											}
										]
									},
									"documentation": null,
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceCarParts_Distributor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1454:2:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1464:0:0"
									},
									"scope": 102,
									"src": "1417:99:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "1697:93:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 77,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "1730:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 74,
															"name": "CarParts_distributors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1704:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$109_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "1704:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$109_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$109_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1704:34:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 81,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "1776:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 80,
														"name": "CarParts_DistributorAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1750:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "EmitStatement",
												"src": "1745:39:0"
											}
										]
									},
									"documentation": null,
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addCarParts_Distributor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1671:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1670:17:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1697:0:0"
									},
									"scope": 102,
									"src": "1637:153:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1983:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 93,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "2019:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 90,
															"name": "CarParts_distributors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1990:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$109_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 172,
														"src": "1990:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$109_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$109_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "1990:37:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 97,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "2067:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "CarParts_DistributorRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2039:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2039:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "EmitStatement",
												"src": "2034:41:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeCarParts_Distributor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1957:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1956:17:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:0:0"
									},
									"scope": 102,
									"src": "1920:161:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 103,
							"src": "175:1909:0"
						}
					],
					"src": "0:2084:0"
				},
				"id": 0
			},
			"contracts/SCaccesscontrol/Roles.sol": {
				"ast": {
					"absolutePath": "contracts/SCaccesscontrol/Roles.sol",
					"exportedSymbols": {
						"Roles": [
							196
						]
					},
					"id": 197,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 104,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title Roles\r\n@dev Library for managing addresses assigned to a Role.\r",
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196
							],
							"name": "Roles",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 109,
									"members": [
										{
											"constant": false,
											"id": 108,
											"name": "bearer",
											"nodeType": "VariableDeclaration",
											"scope": 109,
											"src": "154:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 107,
												"keyType": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "154:25:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "174:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nodeType": "StructDefinition",
									"scope": 196,
									"src": "135:57:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "317:114:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 117,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "332:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "351:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "343:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "343:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "332:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															214,
															215
														],
														"referencedDeclaration": 214,
														"src": "324:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "324:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "324:30:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "369:19:1",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 126,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "374:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 127,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "380:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 125,
																	"name": "has",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "370:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$109_storage_ptr_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "370:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															214,
															215
														],
														"referencedDeclaration": 214,
														"src": "361:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "361:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "361:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 132,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "398:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "398:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 136,
														"indexExpression": {
															"argumentTypes": null,
															"id": 134,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "410:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "398:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "421:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "398:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "398:27:1"
											}
										]
									},
									"documentation": "@dev give an account access to this role\r",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "272:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"contractScope": null,
													"id": 110,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 109,
													"src": "272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "271:36:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:0:1"
									},
									"scope": 196,
									"src": "259:172:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "563:114:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "578:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "597:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "589:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "589:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "578:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															214,
															215
														],
														"referencedDeclaration": 214,
														"src": "570:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "570:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "570:30:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 158,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "619:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 159,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "625:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 157,
																"name": "has",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "615:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$109_storage_ptr_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "615:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															214,
															215
														],
														"referencedDeclaration": 214,
														"src": "607:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "607:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "607:27:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 163,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "643:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "643:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 167,
														"indexExpression": {
															"argumentTypes": null,
															"id": 165,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "655:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "643:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "666:5:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "643:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "643:28:1"
											}
										]
									},
									"documentation": "@dev remove an account's access to this role\r",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "518:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"contractScope": null,
													"id": 142,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 109,
													"src": "518:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "537:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "517:36:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "563:0:1"
									},
									"scope": 196,
									"src": "502:175:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "857:77:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 182,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "872:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "891:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "883:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "883:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "872:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															214,
															215
														],
														"referencedDeclaration": 214,
														"src": "864:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "864:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "864:30:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 189,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "908:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "908:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 192,
													"indexExpression": {
														"argumentTypes": null,
														"id": 191,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "920:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "908:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 180,
												"id": 193,
												"nodeType": "Return",
												"src": "901:27:1"
											}
										]
									},
									"documentation": "@dev check if an account has this role\r\n@return bool\r",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "774:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"contractScope": null,
													"id": 173,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 109,
													"src": "774:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$109_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "793:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "773:36:1"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "848:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "848:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "847:6:1"
									},
									"scope": 196,
									"src": "761:173:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 197,
							"src": "116:821:1"
						}
					],
					"src": "0:937:1"
				},
				"id": 1
			}
		}
	}
}